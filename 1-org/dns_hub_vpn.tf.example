/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/******************************************
 HA VPN
*****************************************/
# Update the on_prem_router_ip_addresses and bgp_peer_asn in the locals
# with actual values before running the script.
# You need to run terraform apply -var 'bgp_peer_secret=<your-secret>'
# so that the secret is not in the tfvars file or in this code.

locals {
  on_prem_router_ip_address1 = "8.8.8.8" # on-prem router ip address 1
  on_prem_router_ip_address2 = "8.8.8.8" # on-prem router ip address 2
  bgp_peer_asn               = "64515"

  region1_router1_tunnel0_bgp_peer_address = "169.254.1.1"
  region1_router1_tunnel0_bgp_peer_range   = "169.254.1.2/30"

  region1_router1_tunnel1_bgp_peer_address = "169.254.2.1"
  region1_router1_tunnel1_bgp_peer_range   = "169.254.2.2/30"

  region1_router2_tunnel0_bgp_peer_address = "169.254.4.1"
  region1_router2_tunnel0_bgp_peer_range   = "169.254.4.2/30"

  region1_router2_tunnel1_bgp_peer_address = "169.254.6.1"
  region1_router2_tunnel1_bgp_peer_range   = "169.254.6.2/30"

  region2_router1_tunnel0_bgp_peer_address = "169.254.8.1"
  region2_router1_tunnel0_bgp_peer_range   = "169.254.8.2/30"

  region2_router1_tunnel1_bgp_peer_address = "169.254.10.1"
  region2_router1_tunnel1_bgp_peer_range   = "169.254.10.2/30"

  region2_router2_tunnel0_bgp_peer_address = "169.254.12.1"
  region2_router2_tunnel0_bgp_peer_range   = "169.254.12.2/30"

  region2_router2_tunnel1_bgp_peer_address = "169.254.14.1"
  region2_router2_tunnel1_bgp_peer_range   = "169.254.14.2/30"
}

module "vpn_ha_region1_router1" {
  source     = "terraform-google-modules/vpn/google//modules/vpn_ha"
  project_id = module.dns_hub.project_id
  region     = var.dns_default_region1
  network    = module.dns_hub_vpc.network_name
  name       = "vpn-dns-hub-${var.dns_default_region1}-cr1"
  peer_external_gateway = {
    redundancy_type = "TWO_IPS_REDUNDANCY"
    interfaces = [
      {
        id         = 0
        ip_address = local.on_prem_router_ip_address1
      },
      {
        id         = 1
        ip_address = local.on_prem_router_ip_address2
    }]
  }
  router_name = module.dns_hub_region1_router1.router.name
  tunnels = {
    remote-0 = {
      bgp_peer = {
        address = local.region1_router1_tunnel0_bgp_peer_address
        asn     = local.bgp_peer_asn
      }
      bgp_peer_options                = null
      bgp_session_range               = local.region1_router1_tunnel0_bgp_peer_range
      ike_version                     = 2
      vpn_gateway_interface           = 0
      peer_external_gateway_interface = 0
      shared_secret                   = var.bgp_peer_secret
    }
    remote-1 = {
      bgp_peer = {
        address = local.region1_router1_tunnel1_bgp_peer_address
        asn     = local.bgp_peer_asn
      }
      bgp_peer_options                = null
      bgp_session_range               = local.region1_router1_tunnel1_bgp_peer_range
      ike_version                     = 2
      vpn_gateway_interface           = 1
      peer_external_gateway_interface = 1
      shared_secret                   = var.bgp_peer_secret
    }
  }
}

module "vpn_ha_region1_router2" {
  source     = "terraform-google-modules/vpn/google//modules/vpn_ha"
  project_id = module.dns_hub.project_id
  region     = var.dns_default_region1
  network    = module.dns_hub_vpc.network_name
  name       = "vpn-dns-hub-${var.dns_default_region1}-cr2"
  peer_external_gateway = {
    redundancy_type = "TWO_IPS_REDUNDANCY"
    interfaces = [
      {
        id         = 0
        ip_address = local.on_prem_router_ip_address1
      },
      {
        id         = 1
        ip_address = local.on_prem_router_ip_address2
    }]
  }
  router_name = module.dns_hub_region1_router2.router.name
  tunnels = {
    remote-0 = {
      bgp_peer = {
        address = local.region1_router2_tunnel0_bgp_peer_address
        asn     = local.bgp_peer_asn
      }
      bgp_peer_options                = null
      bgp_session_range               = local.region1_router2_tunnel0_bgp_peer_range
      ike_version                     = 2
      vpn_gateway_interface           = 0
      peer_external_gateway_interface = 0
      shared_secret                   = var.bgp_peer_secret
    }
    remote-1 = {
      bgp_peer = {
        address = local.region1_router2_tunnel1_bgp_peer_address
        asn     = local.bgp_peer_asn
      }
      bgp_peer_options                = null
      bgp_session_range               = local.region1_router2_tunnel1_bgp_peer_range
      ike_version                     = 2
      vpn_gateway_interface           = 1
      peer_external_gateway_interface = 1
      shared_secret                   = var.bgp_peer_secret
    }
  }
}

module "vpn_ha_region2_router1" {
  source     = "terraform-google-modules/vpn/google//modules/vpn_ha"
  project_id = module.dns_hub.project_id
  region     = var.dns_default_region2
  network    = module.dns_hub_vpc.network_name
  name       = "vpn-dns-hub-${var.dns_default_region2}-cr3"
  peer_external_gateway = {
    redundancy_type = "TWO_IPS_REDUNDANCY"
    interfaces = [
      {
        id         = 0
        ip_address = local.on_prem_router_ip_address1
      },
      {
        id         = 1
        ip_address = local.on_prem_router_ip_address2
    }]
  }
  router_name = module.dns_hub_region2_router1.router.name
  tunnels = {
    remote-0 = {
      bgp_peer = {
        address = local.region2_router1_tunnel0_bgp_peer_address
        asn     = local.bgp_peer_asn
      }
      bgp_peer_options                = null
      bgp_session_range               = local.region2_router1_tunnel0_bgp_peer_range
      ike_version                     = 2
      vpn_gateway_interface           = 0
      peer_external_gateway_interface = 0
      shared_secret                   = var.bgp_peer_secret
    }
    remote-1 = {
      bgp_peer = {
        address = local.region2_router1_tunnel1_bgp_peer_address
        asn     = local.bgp_peer_asn
      }
      bgp_peer_options                = null
      bgp_session_range               = local.region2_router1_tunnel1_bgp_peer_range
      ike_version                     = 2
      vpn_gateway_interface           = 1
      peer_external_gateway_interface = 1
      shared_secret                   = var.bgp_peer_secret
    }
  }
}

module "vpn_ha_region2_router2" {
  source     = "terraform-google-modules/vpn/google//modules/vpn_ha"
  project_id = module.dns_hub.project_id
  region     = var.dns_default_region2
  network    = module.dns_hub_vpc.network_name
  name       = "vpn-dns-hub-${var.dns_default_region2}-cr4"
  peer_external_gateway = {
    redundancy_type = "TWO_IPS_REDUNDANCY"
    interfaces = [
      {
        id         = 0
        ip_address = local.on_prem_router_ip_address1
      },
      {
        id         = 1
        ip_address = local.on_prem_router_ip_address2
    }]
  }
  router_name = module.dns_hub_region2_router2.router.name
  tunnels = {
    remote-0 = {
      bgp_peer = {
        address = local.region2_router2_tunnel0_bgp_peer_address
        asn     = local.bgp_peer_asn
      }
      bgp_peer_options                = null
      bgp_session_range               = local.region2_router2_tunnel0_bgp_peer_range
      ike_version                     = 2
      vpn_gateway_interface           = 0
      peer_external_gateway_interface = 0
      shared_secret                   = var.bgp_peer_secret
    }
    remote-1 = {
      bgp_peer = {
        address = local.region2_router2_tunnel1_bgp_peer_address
        asn     = local.bgp_peer_asn
      }
      bgp_peer_options                = null
      bgp_session_range               = local.region2_router2_tunnel1_bgp_peer_range
      ike_version                     = 2
      vpn_gateway_interface           = 1
      peer_external_gateway_interface = 1
      shared_secret                   = var.bgp_peer_secret
    }
  }
}
